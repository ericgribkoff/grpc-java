apply plugin: 'java'
apply plugin: 'com.google.protobuf'

buildscript {
  repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
    // gradle versions
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.13'
     classpath "net.ltgt.gradle:gradle-apt-plugin:0.13"
  }
}

repositories {
  mavenCentral()
  mavenLocal()
}

apply plugin: 'net.ltgt.errorprone'
apply plugin: 'net.ltgt.apt'

// IMPORTANT: You probably want the non-SNAPSHOT version of gRPC. Make sure you
// are looking at a tagged version of the example and not "master"!

// Feel free to delete the comment at the next line. It is just for safely
// updating the version in our release process.
def grpcVersion = '1.11.0-SNAPSHOT' // CURRENT_GRPC_VERSION

dependencies {
  compile "com.google.api.grpc:proto-google-common-protos:1.0.0"
  compile "io.grpc:grpc-netty:${grpcVersion}"
  compile "io.grpc:grpc-protobuf:${grpcVersion}"
  compile "io.grpc:grpc-stub:${grpcVersion}"

  testCompile "io.grpc:grpc-testing:${grpcVersion}"
  testCompile "junit:junit:4.12"
  testCompile "org.mockito:mockito-core:1.9.5"

  apt 'io.grpc:grpc-java-api-checker:1.0-SNAPSHOT'
}

configurations.errorprone {
    resolutionStrategy.force 'com.google.errorprone:error_prone_core:2.2.0'
}


protobuf {
  protoc {
    artifact = 'com.google.protobuf:protoc:3.5.1-1'
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

compileJava {
options.compilerArgs += ["-XepDisableAllChecks", "-Xep:GrpcInternal:ERROR", "-Xep:GrpcExperimentalApi:ERROR"]
}

// Generate IntelliJ IDEA's .idea & .iml project files
apply plugin: 'idea'

// Provide convenience executables for trying out the examples.
apply plugin: 'application'

startScripts.enabled = false

task helloWorldClient(type: CreateStartScripts) {
  mainClassName = 'io.grpc.examples.helloworld.HelloWorldClient'
  applicationName = 'hello-world-client'
  outputDir = new File(project.buildDir, 'tmp')
  classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
  from(helloWorldClient)
  fileMode = 0755
}
